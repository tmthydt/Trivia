{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/quiz.service.ts","webpack:///./src/app/quiz/quiz.component.css","webpack:///./src/app/quiz/quiz.component.html","webpack:///./src/app/quiz/quiz.component.ts","webpack:///./src/app/results/results.component.css","webpack:///./src/app/results/results.component.html","webpack:///./src/app/results/results.component.ts","webpack:///./src/app/scores/scores.component.css","webpack:///./src/app/scores/scores.component.html","webpack:///./src/app/scores/scores.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav>\\n  <a routerLink=\\\"/quiz\\\" routerLinkActive=\\\"active\\\">Quiz</a>\\n  <a routerLink=\\\"/Scores\\\" routerLinkActive=\\\"active\\\">Scores</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from \"@angular/core\";\nimport { QuizService } from \"./quiz.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"trivia\";\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AppComponent } from \"./app.component\";\nimport { QuizComponent } from \"./quiz/quiz.component\";\nimport { ResultsComponent } from \"./results/results.component\";\nimport { ScoresComponent } from \"./scores/scores.component\";\nimport { QuizService } from \"./quiz.service\";\n\nconst appRoutes: Routes = [\n  { path: \"\", redirectTo: \"quiz\", pathMatch: \"full\" },\n  { path: \"quiz\", component: QuizComponent },\n  { path: \"results\", component: ResultsComponent },\n  { path: \"Scores\", component: ScoresComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizComponent,\n    ResultsComponent,\n    ScoresComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [QuizService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class QuizService {\n  userName: any;\n  userScore: number = 0;\n  userAnswer: any[] = [];\n  quizQuestions: any;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  // gets questions from SQL DB\n  getQuestions() {\n    return this.http.get(\"/api/questions\", {\n      responseType: \"json\"\n    });\n  }\n\n  // sets questions gotten from component to service\n  setQuestions(questions) {\n    this.quizQuestions = questions;\n  }\n\n  // get username and scores from SQL DB\n  getScores() {\n    return this.http.get(\"/api/scores\", { responseType: \"json\" });\n  }\n\n  // post username and score to SQL DB\n  postScores(scoreData) {\n    // this.userName = scoreData.userName;\n    // console.log(\"userName: \", this.userName);\n    // console.log(\"Score: \", this.userScore);\n    // console.log({ username: this.userName, score: this.userScore });\n    console.log(scoreData);\n\n    this.http\n      .post(\"/api/scores\", scoreData, { responseType: \"json\" })\n      .subscribe(response => {\n        console.log(response);\n        this.router.navigate([\"/results\"]);\n      });\n  }\n\n  getScoreInfo(form, questions) {\n    // console.log(form);\n    // console.log(questions);\n    let answerArray = Object.values(form.value); // Object.values converts object into an array of strings\n    // console.log(Object.values(form.value));\n    // console.log(answerArray);\n    this.userName = answerArray[0];\n    // console.log(this.userName);\n    // console.log(questions[0].answer);\n    for (let i = 1; i < answerArray.length; i++) {\n      if (answerArray[i] === questions[i - 1].answer) {\n        // console.log(`Got one right`);\n        this.userScore++;\n      }\n    }\n    this.postScores({ username: this.userName, score: this.userScore });\n    this.userScore = 0;\n    // console.log(this.userName);\n    // console.log(this.userScore);\n    // return this.userName, this.userScore;\n  }\n\n  // totalResults(scoreData, i) {\n  //   console.log(scoreData);\n  //   this.userName = scoreData.playerName;\n  //   console.log(this.userName);\n  //   console.log(this.userScore);\n  //   return this.userName;\n  //   // console.log(scoreData.playerName);\n  //   console.log(scoreData);\n  //   console.log(i);\n\n  //   // for (let i = 0; i < scoreData.questions; i++) {\n  //   //   console.log(scoreData.questions);\n  //   //   //   console.log(i);\n  //   // }\n  // }\n\n  // // check is choice = answer if so add userScore and place choice into an array\n  // checkAnswer(choice, answer, i) {\n  //   if (choice === answer) {\n  //     this.userScore++;\n  //   }\n  //   this.userAnswer = [\n  //     ...this.userAnswer.slice(0, i),\n  //     choice,\n  //     ...this.userAnswer.slice(i + 1)\n  //   ];\n  //   // console.log(answer);\n  //   // console.log(choice);\n  //   // console.log(this.userScore);\n  //   console.log(this.userAnswer);\n  //   return this.userScore, this.userAnswer;\n  // }\n\n  // getName(nameForm) {\n  //   console.log(nameForm);\n  // }\n}\n","module.exports = \".questionBox {\\n  border: 1px solid black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVpei9xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBdUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9xdWl6L3F1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5xdWVzdGlvbkJveCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xufVxuIl19 */\"","module.exports = \"<h1>Are you in it to win it?</h1>\\n\\n<!-- (ngSubmit)=\\\"submitAnswer(quizForm)\\\" -->\\n<!-- <form #nameForm=\\\"ngForm\\\" (ngSubmit)=\\\"getName(nameForm)\\\"></form> -->\\n\\n<form #quizForm=\\\"ngForm\\\" (ngSubmit)=\\\"getScoreInfo(quizForm)\\\">\\n  <p>Please enter your name.</p>\\n  <input type=\\\"text\\\" ngModel name=\\\"userName\\\" />\\n  <div class=\\\"questionBox\\\" *ngFor=\\\"let question of quizQuestions; index as i\\\">\\n    <p>{{ i + 1 }}) {{ question.question_name }}</p>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"question_{{ i + 1 }}\\\"\\n      value=\\\"{{ question.choice_1 }}\\\"\\n      ngModel\\n    />\\n    <label for=\\\"\\\">{{ question.choice_1 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"question_{{ i + 1 }}\\\"\\n      value=\\\"{{ question.choice_2 }}\\\"\\n      ngModel\\n    />\\n    <label for=\\\"\\\">{{ question.choice_2 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"question_{{ i + 1 }}\\\"\\n      value=\\\"{{ question.choice_3 }}\\\"\\n      ngModel\\n    />\\n    <label for=\\\"\\\">{{ question.choice_3 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"question_{{ i + 1 }}\\\"\\n      value=\\\"{{ question.choice_4 }}\\\"\\n      ngModel\\n    />\\n    <label for=\\\"\\\">{{ question.choice_4 }}</label>\\n  </div>\\n  <button>Show Results</button>\\n</form>\\n\\n<!-- mitch -->\\n<!-- <form action=\\\"\\\">\\n  <input type=\\\"radio\\\" value={{ question.choice_1 }} name=\\\"quiz\\\">\\n  <input type=\\\"radio\\\" value={{ question.choice_2 }} name=\\\"quiz\\\">\\n  <input type=\\\"radio\\\" value={{ question.choice_3 }} name=\\\"quiz\\\">\\n  <input type=\\\"radio\\\" value={{ question.choice_4 }} name=\\\"quiz\\\">\\n</form> -->\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { QuizService } from \"../quiz.service\";\n\n@Component({\n  selector: \"quiz\",\n  templateUrl: \"./quiz.component.html\",\n  styleUrls: [\"./quiz.component.css\"]\n})\nexport class QuizComponent implements OnInit {\n  quizQuestions: any;\n  // userScore: number;\n\n  constructor(private quizService: QuizService) {\n    this.quizService.getQuestions().subscribe(response => {\n      this.quizQuestions = response;\n      this.quizService.setQuestions(response); // send questions generated in component to service\n      // console.log(this.quizService.quizQuestions);\n    });\n  }\n\n  // postScores(scoreData) {\n  //   // this.quizService.postScores(scoreData.value);\n  //   console.log(scoreData.value);\n  // }\n\n  // getName(form) {\n  //   this.quizService.getName(form);\n  //   console.log(form);\n  // }\n\n  getScoreInfo(form) {\n    this.quizService.getScoreInfo(form, this.quizQuestions);\n  }\n  // checkAnswer(choice, answer, i) {\n  //   this.quizService.checkAnswer(choice, answer, i);\n  // }\n  ngOnInit() {}\n  //submitAnswer(form){\n  // console.log(form.value)\n  // }\n\n  //\n  // this.service.getScore(form, this.questions)\n\n  // initialArray: any[];\n  // initialArray[index]=true;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdHMvcmVzdWx0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Results</h1>\\n<p>{{ userName }} scored {{ userScore }} out of 10!</p>\\n<div *ngFor=\\\"let question of quizQuestions; index as i\\\">\\n  <p>{{ i + 1 }}) {{ question.question_name }}</p>\\n  <input type=\\\"radio\\\" name=\\\"{{ i }}\\\" value=\\\"{{ question.choice_1 }}\\\" />\\n  <label for=\\\"\\\">{{ question.choice_1 }}</label>\\n  <input type=\\\"radio\\\" name=\\\"{{ i }}\\\" value=\\\"{{ question.choice_2 }}\\\" />\\n  <label for=\\\"\\\">{{ question.choice_2 }}</label>\\n  <input type=\\\"radio\\\" name=\\\"{{ i }}\\\" value=\\\"{{ question.choice_3 }}\\\" />\\n  <label for=\\\"\\\">{{ question.choice_3 }}</label>\\n  <input type=\\\"radio\\\" name=\\\"{{ i }}\\\" value=\\\"{{ question.choice_4 }}\\\" />\\n  <label for=\\\"\\\">{{ question.choice_4 }}</label>\\n  <p>Answer: {{ question.answer }}</p>\\n</div>\\n\\n<a routerLink=\\\"/Scores\\\" routerLinkActive=\\\"active\\\">See scores</a>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { QuizService } from \"../quiz.service\";\n\n@Component({\n  selector: \"results\",\n  templateUrl: \"./results.component.html\",\n  styleUrls: [\"./results.component.css\"]\n})\nexport class ResultsComponent implements OnInit {\n  quizQuestions: any;\n  userName: string;\n  userScore: number;\n  // userAnswer: any[];\n\n  constructor(private quizService: QuizService) {\n    this.quizQuestions = this.quizService.quizQuestions;\n    this.userName = this.quizService.userName;\n    this.userScore = this.quizService.userScore;\n    // this.userAnswer = this.quizService.userAnswer;\n  }\n\n  ngOnInit() {}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Njb3Jlcy9zY29yZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>High Scores</h1>\\n\\n<h3>Top 10</h3>\\n<div *ngFor=\\\"let score of scores\\\">\\n  <p>{{ score.username }}</p>\\n  <p>High Score: {{ score.score }}</p>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { QuizService } from \"../quiz.service\";\n\n@Component({\n  selector: \"app-scores\",\n  templateUrl: \"./scores.component.html\",\n  styleUrls: [\"./scores.component.css\"]\n})\nexport class ScoresComponent implements OnInit {\n  scores: any;\n  constructor(private quizService: QuizService) {\n    this.quizService.getScores().subscribe(response => {\n      this.scores = response;\n      console.log(response);\n    });\n  }\n\n  ngOnInit() {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}